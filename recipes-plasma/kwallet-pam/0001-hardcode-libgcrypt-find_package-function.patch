From ae37554e698fd8d2eb1ec3a7743c1723ca36b5c2 Mon Sep 17 00:00:00 2001
From: Justin Hammond <justin@dynam.ac>
Date: Thu, 24 Aug 2023 14:36:31 +0000
Subject: [PATCH] hardcode libgcrypt find_package function

---
 cmake/modules/FindLibGcrypt.cmake | 35 ++++++++++++++++---------------
 1 file changed, 18 insertions(+), 17 deletions(-)

diff --git a/cmake/modules/FindLibGcrypt.cmake b/cmake/modules/FindLibGcrypt.cmake
index 9857b72..155cbcc 100644
--- a/cmake/modules/FindLibGcrypt.cmake
+++ b/cmake/modules/FindLibGcrypt.cmake
@@ -30,27 +30,28 @@ IF(LIBGCRYPTCONFIG_EXECUTABLE)
 
   # workaround for MinGW/MSYS
   # CMake can't starts shell scripts on windows so it need to use sh.exe
-  EXECUTE_PROCESS(COMMAND sh ${LIBGCRYPTCONFIG_EXECUTABLE} --libs RESULT_VARIABLE _return_VALUE OUTPUT_VARIABLE LIBGCRYPT_LIBRARIES OUTPUT_STRIP_TRAILING_WHITESPACE)
-  EXECUTE_PROCESS(COMMAND sh ${LIBGCRYPTCONFIG_EXECUTABLE} --prefix RESULT_VARIABLE _return_VALUE OUTPUT_VARIABLE LIBGCRYPT_PREFIX OUTPUT_STRIP_TRAILING_WHITESPACE)
-  EXECUTE_PROCESS(COMMAND sh ${LIBGCRYPTCONFIG_EXECUTABLE} --cflags RESULT_VARIABLE _return_VALUE OUTPUT_VARIABLE LIBGCRYPT_CFLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
-  EXECUTE_PROCESS(COMMAND sh ${LIBGCRYPTCONFIG_EXECUTABLE} --version RESULT_VARIABLE _return_VALUEVersion OUTPUT_VARIABLE LIBGCRYPT_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
+  #EXECUTE_PROCESS(COMMAND sh ${LIBGCRYPTCONFIG_EXECUTABLE} --libs RESULT_VARIABLE _return_VALUE OUTPUT_VARIABLE LIBGCRYPT_LIBRARIES OUTPUT_STRIP_TRAILING_WHITESPACE)
+  #EXECUTE_PROCESS(COMMAND sh ${LIBGCRYPTCONFIG_EXECUTABLE} --prefix RESULT_VARIABLE _return_VALUE OUTPUT_VARIABLE LIBGCRYPT_PREFIX OUTPUT_STRIP_TRAILING_WHITESPACE)
+  #EXECUTE_PROCESS(COMMAND sh ${LIBGCRYPTCONFIG_EXECUTABLE} --cflags RESULT_VARIABLE _return_VALUE OUTPUT_VARIABLE LIBGCRYPT_CFLAGS OUTPUT_STRIP_TRAILING_WHITESPACE)
+  #EXECUTE_PROCESS(COMMAND sh ${LIBGCRYPTCONFIG_EXECUTABLE} --version RESULT_VARIABLE _return_VALUEVersion OUTPUT_VARIABLE LIBGCRYPT_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
 
-  IF(NOT LIBGCRYPT_CFLAGS AND NOT _return_VALUE)
-    SET(LIBGCRYPT_CFLAGS " ")
-  ENDIF(NOT LIBGCRYPT_CFLAGS AND NOT _return_VALUE)
+  #IF(NOT LIBGCRYPT_CFLAGS AND NOT _return_VALUE)
+  #  SET(LIBGCRYPT_CFLAGS " ")
+  #ENDIF(NOT LIBGCRYPT_CFLAGS AND NOT _return_VALUE)
 
-  IF(LIBGCRYPT_PREFIX)
-    SET(LIBGCRYPT_INCLUDE_DIR "${LIBGCRYPT_PREFIX}/include")
-  ENDIF(LIBGCRYPT_PREFIX)
+  #IF(LIBGCRYPT_PREFIX)
+  #  SET(LIBGCRYPT_INCLUDE_DIR "${LIBGCRYPT_PREFIX}/include")
+  #ENDIF(LIBGCRYPT_PREFIX)
 
-  IF(LIBGCRYPT_LIBRARIES AND LIBGCRYPT_CFLAGS)
-    SET(LIBGCRYPT_FOUND TRUE)
-  ENDIF(LIBGCRYPT_LIBRARIES AND LIBGCRYPT_CFLAGS)
+  #IF(LIBGCRYPT_LIBRARIES AND LIBGCRYPT_CFLAGS)
+  #  SET(LIBGCRYPT_FOUND TRUE)
+  #ENDIF(LIBGCRYPT_LIBRARIES AND LIBGCRYPT_CFLAGS)
 
-  if(LIBGCRYPT_VERSION VERSION_LESS ${LibGcrypt_FIND_VERSION})
-     message(WARNING "libgcrypt found but version is less than required, Found ${LIBGCRYPT_VERSION} Required ${LibGcrypt_FIND_VERSION}")
-     SET(LIBGCRYPT_FOUND FALSE)
-  endif()
+  #if(LIBGCRYPT_VERSION VERSION_LESS ${LibGcrypt_FIND_VERSION})
+  #   message(WARNING "libgcrypt found but version is less than required, Found ${LIBGCRYPT_VERSION} Required ${LibGcrypt_FIND_VERSION}")
+  #   SET(LIBGCRYPT_FOUND FALSE)
+  #endif()
+  SET(LIBGCRYPT_FOUND TRUE)
 
 ENDIF(LIBGCRYPTCONFIG_EXECUTABLE)
 
